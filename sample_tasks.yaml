- name: Sample Ansible Tasks
  hosts: localhost
  vars:
    src_dir: "/home/subhasis/src_folder/"
    target_dir: "/home/subhasis/target_folder/"
  tasks:
    - name: Print Hello, World!
      debug:
        msg: "Hello, World!"
      tags:
        - print-msg

    - name: Find files matching with wildcard pattern in a spcific folder
      find:
        paths: /home/subhasis/src_folder/   #src folder path
        patterns: "file*.txt"
      register: found_files
      tags:
        - copy-files

    - name: Copy and rename each file to a different folder and rename file with date and time
      copy:
        src: "{{ item.path }}"
        dest: "/home/subhasis/target_folder/{{ item.path | basename | regex_replace('(.*)\\.txt', '\\1') }}_{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}.txt"
        remote_src: yes
      loop: "{{ found_files.files }}"
      tags:
        - copy-files

    # Pass file names as extra-vars and copy the files from src to target folder
    # example : --extra-vars "file_patterns=create_db.sql,alter_table.sql,payload.json"
    - name: Split file patterns into a list
      set_fact:
        file_list: "{{ file_patterns.split(',') }}"
      tags: copy-all-files

    - name: Copy each file from source to target
      copy:
        src: "{{ src_dir }}{{ item }}"
        dest: "{{ target_dir }}{{ item }}"
        remote_src: yes
      loop: "{{ file_list }}"
      tags: copy-all-files
      
    # Pass file names and CR number as extra-vars and copy the files whose first line matches with the CR number
    # example : --extra-vars "file_patterns=create_db.sql,alter_table.sql,payload.json cr_number=CR12345"
    - name: Split file patterns into a list
      set_fact:
        file_list: "{{ file_patterns.split(',') }}"
      tags:
        - copy-only-crnumber-file

    - name: Check if the first line of each file matches cr_number
      command: "head -n 1 {{ src_dir }}{{ item }}"
      register: file_check_results
      with_items: "{{ file_list }}"
      tags:
        - copy-only-crnumber-file

    - name: Copy each file from source to target if the first line matches cr_number
      copy:
        src: "{{ src_dir }}{{ item.item }}"
        dest: "{{ target_dir }}{{ item.item }}"
        remote_src: yes
      with_items: "{{ file_check_results.results }}"
      when: item.stdout | regex_replace('^--- ', '') == cr_number
      tags:
        - copy-only-crnumber-file
          
    
